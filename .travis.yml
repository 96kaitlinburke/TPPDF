os: osx
osx_image: xcode11.4
language: objective-c

env:
  global:
    - DESTINATION="OS=13.2.2,name=iPhone 11 Pro"

jobs:
  include:
    - language: objective-c
      cache:
        bundler: true
        cocoapods: true
      podfile: "Example iOS-Cocoapods/Podfile"
      env:
      - ROOT_FOLDER="Example iOS-Cocoapods"
      - WORKSPACE="Example.xcworkspace"
      - PROJECT="Example.xcodeproj"
      - EXAMPLE_SCHEME="Example"
      install:
      - bundle install
      - bundle exec pod install --project-directory="${ROOT_FOLDER}"
      before_script:
      - set -euo pipefail
      - cd "${ROOT_FOLDER}"
      script:
      - set -o pipefail
      - xcodebuild -workspace "$WORKSPACE"
                   -scheme "$EXAMPLE_SCHEME"
                   -sdk iphonesimulator
                   -destination "$DESTINATION"
                   -configuration Debug
                   -derivedDataPath ${TRAVIS_BUILD_DIR}/derived_data
                   ONLY_ACTIVE_ARCH=YES
                   build | xcpretty
      - bundle exec pod lib lint --allow-warnings
    - language: objective-c
      env:
      - ROOT_FOLDER="Example iOS-Carthage"
      - WORKSPACE="Example.xcworkspace"
      - PROJECT="Examplexcodeproj"
      - EXAMPLE_SCHEME="Example"
      before_install:
      - brew update
      - brew outdated carthage || brew upgrade carthage
      before_script:
      - set -euo pipefail
      - cd "${ROOT_FOLDER}"
      - echo 'github "techprimate/TPPDF" "'$(git rev-parse HEAD)'"' > Cartfile
      - carthage update --platform ios
      script:
      - xcodebuild -workspace "$WORKSPACE"
                   -scheme "$EXAMPLE_SCHEME"
                   -sdk iphonesimulator
                   -destination "$DESTINATION"
                   -configuration Debug
                   -derivedDataPath ${TRAVIS_BUILD_DIR}/derived_data
                   ONLY_ACTIVE_ARCH=YES
                   build | xcpretty
    - language: objective-c
      env:
      - ROOT_FOLDER="Example iOS-SwiftPM"
      - PROJECT="Example.xcodeproj"
      - TEST_FRAMEWORK_SCHEME="Example"
      - EXAMPLE_SCHEME="Example"
      before_script:
      - set -euo pipefail
      - cd "${ROOT_FOLDER}"
      script:
      - xcodebuild -resolvePackageDependencies
                   -project ${PROJECT}
                   -scheme ${EXAMPLE_SCHEME}
                   -clonedSourcePackagesDirPath .
                   -derivedDataPath ${TRAVIS_BUILD_DIR}/derived_data
                   -configuration Debug | xcpretty
      - xcodebuild -project ${PROJECT}
                   -scheme ${EXAMPLE_SCHEME}
                   -clonedSourcePackagesDirPath .
                   -derivedDataPath ${TRAVIS_BUILD_DIR}/derived_data
                   -sdk iphonesimulator
                   -destination "${DESTINATION}"
                   -configuration Debug
                   ONLY_ACTIVE_ARCH=YES
                   build | xcpretty
      - xcodebuild -project ${PROJECT}
                   -scheme ${TEST_FRAMEWORK_SCHEME}
                   -clonedSourcePackagesDirPath .
                   -derivedDataPath ${TRAVIS_BUILD_DIR}/derived_data
                   -sdk iphonesimulator
                   -destination "${DESTINATION}"
                   -configuration Debug
                   ONLY_ACTIVE_ARCH=YES
                   test | xcpretty

after_success:
- slather coverage -t --build-directory ${TRAVIS_BUILD_DIR}/derived_data --verbose
- bash <(curl -s https://codecov.io/bash) -f cobertura.xml -X coveragepy -X gcov -X xcode
